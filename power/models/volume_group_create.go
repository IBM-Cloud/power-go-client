// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VolumeGroupCreate volume group create
//
// swagger:model VolumeGroupCreate
type VolumeGroupCreate struct {

	// storage volume group name. This is required to onboard existing voluem group on the target site for DR set up.
	ConsistencyGroupName string `json:"consistencyGroupName,omitempty"`

	// name of the volume group. This field is required for creation of new volume group.
	Name string `json:"name,omitempty"`

	// List of volume IDs,member of VolumeGroup
	// Required: true
	VolumeIDs []string `json:"volumeIDs"`
}

// Validate validates this volume group create
func (m *VolumeGroupCreate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVolumeIDs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VolumeGroupCreate) validateVolumeIDs(formats strfmt.Registry) error {

	if err := validate.Required("volumeIDs", "body", m.VolumeIDs); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this volume group create based on context it is used
func (m *VolumeGroupCreate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VolumeGroupCreate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VolumeGroupCreate) UnmarshalBinary(b []byte) error {
	var res VolumeGroupCreate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
