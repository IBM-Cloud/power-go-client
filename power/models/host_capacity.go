// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HostCapacity host capacity
//
// swagger:model HostCapacity
type HostCapacity struct {

	// Number of cores currently available
	AvailableCore float64 `json:"availableCore,omitempty"`

	// Amount of memory currently available (in MB)
	AvailableMemory float64 `json:"availableMemory,omitempty"`

	// Number of cores reserved for system use
	ReservedCore float64 `json:"reservedCore,omitempty"`

	// Amount of memory reserved for system use (in MB)
	ReservedMemory float64 `json:"reservedMemory,omitempty"`

	// Total number of cores of the host
	TotalCore float64 `json:"totalCore,omitempty"`

	// Total amount of memory of the host (in MB)
	TotalMemory float64 `json:"totalMemory,omitempty"`

	// Number of cores in use on the host
	UsedCore float64 `json:"usedCore,omitempty"`

	// Amount of memory used on the host (in MB)
	UsedMemory float64 `json:"usedMemory,omitempty"`
}

// Validate validates this host capacity
func (m *HostCapacity) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this host capacity based on context it is used
func (m *HostCapacity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HostCapacity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HostCapacity) UnmarshalBinary(b []byte) error {
	var res HostCapacity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
