// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AddHost Host to add to a host group
//
// swagger:model AddHost
type AddHost struct {

	// Name of the host chosen by the user
	// Required: true
	DisplayName *string `json:"displayName"`

	// System type
	// Required: true
	SysType *string `json:"sysType"`
}

// Validate validates this add host
func (m *AddHost) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSysType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AddHost) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("displayName", "body", m.DisplayName); err != nil {
		return err
	}

	return nil
}

func (m *AddHost) validateSysType(formats strfmt.Registry) error {

	if err := validate.Required("sysType", "body", m.SysType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this add host based on context it is used
func (m *AddHost) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AddHost) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AddHost) UnmarshalBinary(b []byte) error {
	var res AddHost
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
